<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="review">
	<!-- 게시판 이미지 -->
	<select id="getImages" resultType="String">
		select fullName from images
		where rno=#{rno} order by regdate
	</select>
	<delete id="deleteImages">
		delete from images where fullName=#{fullName}
	</delete>
	<insert id="addImages">
		insert into images (fullName, rno) values
		(#{fullName}, seq_review.currval)
	</insert>
	<insert id="updateImages">
		insert into images (fullName, rno) values
		(#{fullName}, #{rno})
	</insert>

	<!-- 글 저장 -->
	<insert id="insert">
		insert into review (rno,title,content,writer,show)
		values (seq_review.nextval, #{title}, #{content}, #{writer}, 'Y')
	</insert>
	<!-- 게시물 내용 -->
	<select id="view"
		resultType="com.naver.peekaboo21.model.review.dto.ReviewDTO">
		select rno, title, content, r.regdate, viewcnt, name,
		writer, show
		from review r, member m
		where r.writer=m.email and
		rno=#{rno}
	</select>
	<!-- 조회수 증가 처리 -->
	<update id="increaseViewcnt">
		update review set viewcnt=viewcnt+1 where rno=#{rno}
	</update>
	<!-- 게시물 수정 -->
	<update id="updateArticle">
		update review set title=#{title}, content=#{content}
		where rno=#{rno}
	</update>
	<!-- 게시물 숨김 처리 -->
	<update id="deleteArticle">
		update review set show='N' where rno=#{rno}
	</update>

	<select id="countArticle" resultType="int">
		select count(*) from review r, member m
		<include refid="search" />
	</select>

	<select id="listAll"
		resultType="com.naver.peekaboo21.model.review.dto.ReviewDTO">
		<include refid="paging_header" />
		select rownum, rno, title, content, r.regdate, viewcnt, name, show,
		(select count(*) from comments where rno=r.rno) cnt
		from review r,
		member m
		<include refid="search" />
		order by rno desc, regdate desc
		<include refid="paging_footer" />
	</select>

	<sql id="paging_header">
		select * from(select rownum as rn, A.*
		from (
	</sql>
	<sql id="paging_footer">
		) A
		) where rn between #{start} and #{end}
	</sql>
	<sql id="search">
		<choose>
			<when test="search_option == 'all'">
				where r.writer=m.email and (name like '%'||#{keyword}||'%'
				or content like '%'||#{keyword}||'%'
				or title like '%'||#{keyword}||'%')
			</when>
			<otherwise>
				where r.writer=m.email and
				${search_option} like
				'%'||#{keyword}||'%'
			</otherwise>
		</choose>
	</sql>

</mapper>